name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: mac
          - os: windows-latest
            platform: windows
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Generate icons
        run: npm run icons
        continue-on-error: true
      
      - name: Build application
        run: npm run build
      
      - name: Build distributables
        run: npm run make
      
      - name: Upload Windows artifacts
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: out/make/squirrel.windows/**/*Setup.exe
          retention-days: 30
      
      - name: Upload Mac artifacts
        if: matrix.platform == 'mac'
        uses: actions/upload-artifact@v4
        with:
          name: mac-installer
          path: out/make/**/*.dmg
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-installer
          path: ./release-files/
      
      - name: Download Mac artifacts
        uses: actions/download-artifact@v4
        with:
          name: mac-installer
          path: ./release-files/
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./release-files/**/*
          name: Release ${{ github.ref_name }}
          body: |
            ## Isla Journal ${{ github.ref_name }}
            
            ### Downloads
            - **Windows**: Download the `.exe` installer
            - **macOS**: Download the `.dmg` installer
            
            ### Installation
            - **Windows**: Run the installer, may show security warning (normal for unsigned apps)
            - **macOS**: Open the DMG and drag to Applications folder
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 