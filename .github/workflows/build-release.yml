name: Build Windows Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Clean any local build artifacts
        run: |
          echo "üßπ Removing any local build artifacts that might interfere..."
          if (Test-Path "dist") { Remove-Item -Path "dist" -Recurse -Force }
          if (Test-Path "out") { Remove-Item -Path "out" -Recurse -Force }
          if (Test-Path "node_modules\.cache") { Remove-Item -Path "node_modules\.cache" -Recurse -Force }
          echo "‚úÖ Clean build environment prepared"
        shell: powershell
      
      - name: Setup Windows Build Environment
        run: |
          echo "Setting up Windows build environment for native modules..."
          
      - name: Rebuild native modules for Windows
        run: |
          echo "Rebuilding better-sqlite3 for Windows..."
          npm rebuild better-sqlite3 --build-from-source --verbose
          echo "Running @electron/rebuild for all native modules..."
          npx @electron/rebuild --verbose
          echo "Verifying better-sqlite3 binary..."
          if (Test-Path "node_modules\better-sqlite3\build\Release\better_sqlite3.node") {
            echo "‚úÖ better-sqlite3 binary exists"
            if (Get-Command file -ErrorAction SilentlyContinue) {
              file node_modules\better-sqlite3\build\Release\better_sqlite3.node
            } else {
              echo "File command not available - binary exists but cannot check type"
            }
          } else {
            echo "‚ùå better-sqlite3 binary missing"
            exit 1
          }
        shell: powershell
      
      - name: Debug environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Working directory: $(pwd)"
          echo "Build directory exists: $(if (Test-Path build) { 'Yes' } else { 'No' })"
          if (Test-Path build) { echo "Build contents: $(Get-ChildItem build)" }
        shell: powershell
      
      - name: Generate icons (with error handling)
        run: npm run icons
        continue-on-error: true
      
      - name: Build application from source
        run: |
          echo "üî® Building application completely from source..."
          echo "Ensuring TypeScript compilation happens on Windows..."
          npm run build:vite
          npm run build:main  
          npm run build:preload
          echo "‚úÖ Fresh Windows build completed"
      
      - name: Debug build output
        run: |
          echo "Dist directory exists: $(if (Test-Path dist) { 'Yes' } else { 'No' })"
          if (Test-Path dist) { echo "Dist contents: $(Get-ChildItem dist -Recurse)" }
        shell: powershell
        continue-on-error: true
      
      - name: Build Windows installer
        run: npm run make
      
      - name: Debug output directory
        run: |
          echo "Out directory exists: $(if (Test-Path out) { 'Yes' } else { 'No' })"
          if (Test-Path out) { echo "Out contents: $(Get-ChildItem out -Recurse)" }
        shell: powershell
        continue-on-error: true
      
      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: out/make/squirrel.windows/**/*.exe
      
      - name: Create Release (if tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: out/make/squirrel.windows/**/*.exe
          draft: false
          prerelease: false
          generate_release_notes: true 