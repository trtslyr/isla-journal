name: Build and Release Isla Journal

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v1.0.0)'
        required: true
        default: 'v0.1.0'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: mac
            arch: x64
          - os: macos-latest
            platform: mac
            arch: arm64
          - os: windows-latest
            platform: win
            arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Cache native modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules/better-sqlite3/build
            node_modules/systeminformation/build
          key: ${{ runner.os }}-${{ matrix.arch }}-native-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-native-modules-

      - name: Install build tools (Ubuntu)
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Install build tools (Windows)
        if: matrix.platform == 'win'
        run: |
          echo "Windows build tools should be available in GitHub Actions runner"

      - name: Setup Python (for native compilation)
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: npm ci

      - name: Rebuild native dependencies
        run: |
          echo "🔧 Rebuilding native dependencies for Electron..."
          npx @electron/rebuild --verbose --only better-sqlite3,systeminformation || echo "⚠️ Rebuild failed, trying with build-from-source..."
          # Fallback: try building from source if rebuild fails
          if [ ! -f "node_modules/better-sqlite3/build/Release/better_sqlite3.node" ]; then
            echo "🔧 Building better-sqlite3 from source..."
            cd node_modules/better-sqlite3 && npm run build-release && cd ../..
          fi
          echo "✅ Native dependencies ready"

      - name: Build app
        run: |
          echo "🏗️ Starting build process..."
          mkdir -p dist/main dist/preload dist/renderer
          
          echo "📋 Running build:vite..."
          npm run build:vite
          ls -la dist/renderer/
          
          echo "📋 Running build:main..."
          npm run build:main
          ls -la dist/main/
          
          echo "📋 Running build:preload..."
          npm run build:preload
          ls -la dist/preload/
          
          echo "✅ All builds completed"

      - name: Verify entry file exists
        run: |
          echo "🔍 Checking for main entry file..."
          if [ -f "dist/main/index.js" ]; then
            echo "✅ Found dist/main/index.js"
            ls -la dist/main/index.js
            echo "📄 Content preview:"
            head -n 10 dist/main/index.js
          else
            echo "❌ dist/main/index.js NOT FOUND!"
            echo "📁 Available files in dist/:"
            find dist/ -name "*.js" -type f | head -10
            echo "📂 Full dist directory structure:"
            ls -la dist/
            echo "🔍 Checking TypeScript compilation output:"
            npx tsc --version
            echo "🔍 Re-running build to debug:"
            npm run build:main
            ls -la dist/main/ || echo "No dist/main directory"
            exit 1
          fi

      - name: Verify native dependencies
        run: |
          echo "🔍 Checking native dependencies..."
          if [ -f "node_modules/better-sqlite3/build/Release/better_sqlite3.node" ]; then
            echo "✅ better-sqlite3 native binary found"
            ls -la node_modules/better-sqlite3/build/Release/better_sqlite3.node
          else
            echo "⚠️ better-sqlite3 native binary not found"
            find node_modules/better-sqlite3 -name "*.node" -type f | head -5
          fi

      - name: Build distributables (macOS)
        if: matrix.platform == 'mac'
        run: |
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            npm run dist:mac -- --arm64
          else
            npm run dist:mac -- --x64
          fi

      - name: Build distributables (Windows)
        if: matrix.platform == 'win'
        run: npm run dist:win

      - name: Build distributables (Linux)
        if: matrix.platform == 'linux'
        run: npm run dist:linux

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: isla-journal-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            release/*.dmg
            release/*.exe
            release/*.AppImage
            release/*.deb
            release/*.rpm
            release/*.tar.gz
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name || github.event.inputs.version }}
          name: Release ${{ github.ref_name || github.event.inputs.version }}
          draft: false
          prerelease: false
          files: release-artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 