name: Build and Release Isla Journal

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-mac-arm64:
    name: macOS (arm64)
    runs-on: macos-latest
    env:
      CSC_TEAM_ID: ${{ secrets.TEAM_ID }}
      CSC_NAME: "Developer ID Application: Taylor Wall (85H5F442V2)"
      APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
      APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
      APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      CSC_LINK: ${{ secrets.P12_BASE64 }}
      CSC_KEY_PASSWORD: ${{ secrets.P12_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Import Apple code signing certificate
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.P12_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}
      - name: Verify signing identities
        run: |
          security find-identity -p codesigning -v | cat
          echo "Team: ${{ secrets.TEAM_ID }}"
      - name: Install dependencies
        run: npm ci --no-optional
      - name: Build app
        run: npm run build
      - name: Make macOS (arm64)
        run: npx electron-forge make --platform=darwin --arch=arm64 | cat
      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          echo "Searching for DMG/ZIP artifacts in workspace..."
          find . -type f -name "*.dmg" -exec cp -n {} artifacts/ \; || true
          find . -type f -name "*.zip" -exec cp -n {} artifacts/ \; || true
      - uses: actions/upload-artifact@v4
        with:
          name: macos-arm64
          path: artifacts/*

  build-mac-x64:
    name: macOS (x64)
    runs-on: macos-13
    env:
      CSC_TEAM_ID: ${{ secrets.TEAM_ID }}
      CSC_NAME: "Developer ID Application: Taylor Wall (85H5F442V2)"
      APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
      APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
      APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      CSC_LINK: ${{ secrets.P12_BASE64 }}
      CSC_KEY_PASSWORD: ${{ secrets.P12_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Import Apple code signing certificate
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.P12_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}
      - name: Verify signing identities
        run: |
          security find-identity -p codesigning -v | cat
          echo "Team: ${{ secrets.TEAM_ID }}"
      - name: Install dependencies
        run: npm ci --no-optional
      - name: Build app
        run: npm run build
      - name: Make macOS (x64)
        run: npx electron-forge make --platform=darwin --arch=x64 | cat
      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          echo "Searching for DMG/ZIP artifacts in workspace..."
          find . -type f -name "*.dmg" -exec cp -n {} artifacts/ \; || true
          find . -type f -name "*.zip" -exec cp -n {} artifacts/ \; || true
      - uses: actions/upload-artifact@v4
        with:
          name: macos-x64
          path: artifacts/*

  build-windows-x64:
    name: Windows (x64)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci --no-optional
      - name: Build app
        run: npm run build
      - name: Make Windows (x64)
        shell: bash
        run: |
          npx electron-forge make --platform=win32 --arch=x64
      - name: Collect artifacts
        shell: bash
        run: |
          mkdir -p artifacts
          echo "Searching for EXE/ZIP artifacts in workspace..."
          find . -type f -name "*.exe" -exec cp -n {} artifacts/ \; || true
          find . -type f -name "*.zip" -exec cp -n {} artifacts/ \; || true
      - uses: actions/upload-artifact@v4
        with:
          name: windows-x64
          path: artifacts/*

  publish-release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: [build-mac-arm64, build-mac-x64, build-windows-x64]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist_artifacts
      - name: Display collected files
        run: |
          ls -R dist_artifacts
      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist_artifacts/**
          draft: false
          prerelease: false
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


